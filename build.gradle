plugins {
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {
		name = "a"
		url "https://maven.parchmentmc.org"
	}
	maven { url "https://maven.ladysnake.org/releases" }
	maven { url "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/" }
}

loom {
    splitEnvironmentSourceSets()

	mods {
		"betterfauna" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

fabricApi {
	configureDataGeneration()
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-1.20.2:2023.12.10@zip")
	}
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modApi "fuzs.forgeconfigapiport:forgeconfigapiport-fabric:${project.config_verison}"
	project.cc_modules.split(",").each { module ->
		modImplementation include ("dev.onyxstudios.cardinal-components-api:cardinal-components-${module}:${project.cc_version}")
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

loom {
	accessWidenerPath = file("src/main/resources/betterfauna.accesswidener")
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
	}
}